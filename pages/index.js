import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import Select from "react-select";
import { Col, Container, FormGroup, Label, Row } from "reactstrap";
import Header from "../components/Header";
import { Others, Visa } from "../components/home";
import { getUserAppointment } from "../redux/action/index";
import {
  applicationDetailsFetchRequest,
  applicationDetailsFetchSuccess,
  applicationDetailsFetchMemberSuccess,
} from "../redux/reducer/application-detail";
import { categoryServiceListFetchRequest } from "../redux/reducer/category-service";
import { toast } from "react-toastify";
import Loader from "../components/loader";

export default function Home() {
  const dispatch = useDispatch();
  const { categoryServiceList } = useSelector(
    (state) => state.categoryServiceList,
  );
  const router = useRouter();

  const [categoryServiceOptions, setCategoryServiceOptions] = useState([]);
  const [selectedService, setSelectedService] = useState({
    value: "Visa",
    label: "Visa",
  });
  const [isLoader, setIsLoader] = useState(false);

  const handleContinue = (values) => {
    setIsLoader(true);
    const obj = {
      selectedService: selectedService,
      appointmentDetails: values,
    };
    dispatch(getUserAppointment(obj));

    const details = {
      applicationId: values.application_id,
      dob: values.dob,
      serviceType: selectedService.label,
    };
    dispatch(
      applicationDetailsFetchRequest(
        details,
        (success) => {
          if (success.data.category !== selectedService.label) {
            setIsLoader(false);
            toast.error("Application Id is not of selected service");
          } else {
            const tempArray = [];
            tempArray.push(success.data);
            dispatch(applicationDetailsFetchMemberSuccess(tempArray));
            dispatch(applicationDetailsFetchSuccess(success.data));
            if (success.status === 200) {
              setIsLoader(false);
              router.push({
                pathname: "/book-appointment",
                query: { selectedService: selectedService.label },
              });
            }
          }
        },
        (error) => {
          setIsLoader(false);
          toast.error(error.message);
        },
      ),
    );
  };

  useEffect(() => {
    dispatch(categoryServiceListFetchRequest());
  }, []);

  useEffect(() => {
    const obtainedList = categoryServiceList.map((service) => {
      return {
        value:
          service?.categoryName.charAt(0).toUpperCase() +
          service?.categoryName.slice(1),
        label:
          service?.categoryName.charAt(0).toUpperCase() +
          service?.categoryName.slice(1),
      };
    });
    setCategoryServiceOptions(obtainedList);
  }, []);

  return (
    <>
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <section className="appointment-form">
        <Container>
          <Row className="appointment-form__row">
            <Col md={6} lg={6} xl={6}>
              <div className="appointment-form__img--wrapper">
                <div className="appointment-form__img">
                  <Image
                    alt="img"
                    src="/images/appoint-img.png"
                    className="appointment-form__img img-fluid"
                    height={380}
                    width={490}
                  />
                </div>
              </div>
            </Col>
            <Col md={6} lg={6} xl={6}>
              <div className="appointment-form__content">
                <h1 className="appointment-form__title">
                  Welcome to <mark>OIS</mark> Appointment Booking System
                </h1>
                <p className="appointment-form__info">
                  {" "}
                  New Appointment / Reschedule Appointment / Cancel Appointment{" "}
                </p>

                <div className="appointment-form__fields">
                  <FormGroup>
                    <Label for="exampleSelect">Select Service</Label>
                    <Select
                      defaultValue={selectedService}
                      onChange={(selected) => {
                        setSelectedService(selected);
                      }}
                      options={categoryServiceOptions}
                      className="react-select-container"
                      classNamePrefix="react-select"
                    />
                  </FormGroup>
                  <Row>
                    {selectedService?.label == "Visa" ? (
                      <Visa
                        handleContinue={handleContinue}
                        isLoader={isLoader}
                      />
                    ) : (
                      <Others
                        handleContinue={handleContinue}
                        isLoader={isLoader}
                      />
                    )}
                  </Row>
                </div>
                <p className="appointment-form_desc">
                  If you have not completed your visa application, please{" "}
                  <a href="https://portal.immigration.gov.ng/visa/freshVisa">
                    visit
                  </a>{" "}
                  to complete your application, before returning to OIS to book
                  your appointment.
                </p>
              </div>
            </Col>
          </Row>
        </Container>
        <Loader isLoader={isLoader} />
      </section>
    </>
  );
}
